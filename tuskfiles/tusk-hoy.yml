interpreter: bash -c
name: hoy
usage: polysensus hoy ops
options:

  launchdir:
    usage: >
      Don't set this option. Its a work around for a go-tusk peculiarity
    environment: PWD

  verbose:
    type: bool
    default: false
    short: "v"

  apikey:
    usage: "APIKEY to use for polysensus services"
    default:
      command: echo $CAIMST_API_KEY

tasks:

  ethchainid:
    usage: "used as an upcheck for a node and to confirm the auth works"
    options:
      url:
        default: https://chains.hoy.polysensus.io/chains
      node:
        default: "ethnode0"
        short: "n"
      chain:
        default: caimst-209301
      noverify:
        type: bool
        default: false
        short: "K"

    run:
      - command:
          exec: |
            set -ex

            URL=${url}/${chain}/node/${node}/${apikey}
            curl \
             $(${verbose} && echo "-v") \
             $(${noverify} || echo "-k") \
             -X POST -H "Content-Type: application/json" \
             -d '{"method":"eth_chainId","params":[],"id":1,"jsonrpc":"2.0"}' \
                $URL

  ethnodekey:
    usage: "create an api key for an ethnode"
    options:
      url:
        default: "https://hoy.polysensus.io/auth-apikeystore"
      display-name:
        default:
          command: echo $USER-$(date +%Y%m%d.%s)
        short: "u"
      node:
        default: "ethnode0"
        short: "n"
      scopes:
        default: "rpc://eth_* rpc://net_* rpc://admin_nodeInfo"
      verify:
        type: bool
        default: false
        short: "K"

    run:
      - command:
          exec: |
            set -e
            OUTPUT=$(curl $(! ${verbose} && echo "-s") \
             $(${verbose} && echo "-v") \
             $(${verify} || echo "-k") \
             -H "Content-Type: application/json" \
             -d '{"display_name":"${display-name}","aud":"${node}","scopes":"${scopes}"}' \
                ${url}/clients)

            ! ${verbose} && echo -n "$OUTPUT" | jq -r .apikey && exit 0
            echo $OUTPUT

  reconcile:
    options:
      namespace:
        default: hoy-iam-dev
        short: "n"
    run:
      - command:
          exec: |
            set -e

            for name in $(kubectl -n ${namespace} get gitrepositories -o name); do
              echo $name
              name=$(echo -n $name | cut -d '/' -f2)
              flux reconcile source git -n ${namespace} $name
            done

            for name in $(kubectl -n ${namespace} get kustomization -o name); do
              echo $name
              name=$(echo -n $name | cut -d '/' -f2)
              flux reconcile kustomization -n ${namespace} $name
            done

  delete-failed:
    run:
      - command:
          exec: |
            for ns in $(kubectl get namespace -o custom-columns=":metadata.name"); do
              [ -z "$ns" ] && continue
              for name in $(kubectl -n ${ns} get pod --field-selector status.phase=Failed -o name); do
                kubectl -n ${ns} delete $name
              done
            done
